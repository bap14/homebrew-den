class Den < Formula
  desc "Den is a CLI utility for working with docker-compose environments"
  homepage "https://swiftotter.github.io/den"
  license "MIT"
  version "${VERSION}"
  url "https://github.com/swiftotter/den/archive/${VERSION}.tar.gz"
  sha256 "${HASH}"
  head "https://github.com/swiftotter/den.git", :branch => "main"

  conflicts_with "davidalger/warden/warden", because: "Den is a replacement fork of Warden"

  # Check if Docker Desktop is installed; otherwise, install it via brew
  depends_on cask: "docker" unless File.exists?("/Applications/Docker.app")

  def install
    prefix.install Dir["*"]
  end

  def post_install
    # This is required so docker is found if it's not installed via brew
    ENV["PATH"] += ":/usr/local/bin" if OS.mac? || OS.linux?

    # Specify necessary environment variables
    ENV["WARDEN_HOME_DIR"] = prefix
    ENV["WARDEN_SERVICE_DIR"] = prefix

    # Future proof environment variable names
    ENV["DEN_HOME_DIR"] = prefix
    ENV["DEN_SERVICE_DIR"] = prefix

    Pathname(prefix/"docker").cd do
      den_version = File.read(prefix/"version").strip()
      system "docker",
            "compose",
            "-p", "den",
            "build",
            "--no-cache",
            "--build-arg", "DEN_VERSION=#{den_version}",
            "dashboard"
    end
  end

  def caveats
    <<~EOS
      Den manages a set of global services on the docker host machine. You
      will need to have Docker installed and Docker Compose (>= 2.2.3) available in your
      local $PATH configuration prior to starting Den.

      To start warden simply run:
        den svc up
      
      This command will automatically run an installation if necessary to setup a trusted
      local root certificate and sign an SSL certificate for use by services
      managed by warden via the "warden sign-certificate warden.test" command.
      To print a complete list of available commands simply run "den" without
      any arguments.
    EOS
  end
end

